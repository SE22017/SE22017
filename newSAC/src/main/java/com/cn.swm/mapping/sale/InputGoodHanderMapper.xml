<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cn.swm.dao.sale.InputGoodHanderMapper" >
  <resultMap id="HanderResultMap" type="com.cn.swm.model.sale.InputGoodHander" >
    <result column="id" property="id" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="supply" property="supply" jdbcType="VARCHAR" />
    <result column="shop" property="shop" jdbcType="VARCHAR" />
    <result column="person" property="person" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="VARCHAR" />
    <result column="ioflag" property="ioflag" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap type="com.cn.swm.model.sale.InputGoodHander" id="handerItemResult">  
   <result column="id" property="id" jdbcType="VARCHAR" />
   <result column="code" property="code" jdbcType="VARCHAR" />
   <result column="supply" property="supply" jdbcType="VARCHAR" />
   <result column="shop" property="shop" jdbcType="VARCHAR" />
   <result column="person" property="person" jdbcType="VARCHAR" />
   <result column="note" property="note" jdbcType="VARCHAR" />
   <result column="amount" property="amount" jdbcType="VARCHAR" />
   <result column="flag" property="flag" jdbcType="VARCHAR" /> 
   <!--一对多关系的时候，一方使用collection标签映射多方，属性就是Teacher对象中的集合属性名称。因为是集合类型，所以不能再直接使用column属性，需要使用另一个映射对象结果集合，该结果集合也是通过namespace.id指定。当然也可以不引用其他结果集合，在标签内部可以自己在定义临时的resultMap标签对象，比如id,result标签 -->  
   <collection property="items"  
     resultMap="com.cn.swm.dao.sale.InputGoodItemMapper.ItemResultMap"></collection>  
 </resultMap>  
  <select id="getInputGoodList" resultMap="HanderResultMap" parameterType="com.cn.swm.model.sale.InputGoodHander" >
       select *	from inputgoodhander
		<where>
			<if test="code != null  and code != ''" >
				and code = #{code,jdbcType=VARCHAR} 
			</if>
			<if test="supply != null  and supply != ''" >
				and supply = #{supply,jdbcType=VARCHAR} 
			</if>
			<if test="ioflag != null  and ioflag != ''" >
				and ioflag = #{ioflag,jdbcType=VARCHAR} 
			</if>
	    </where>	
  </select>
 <!--这里查询结果中就包含表头和明细集合，使用到了多表连接查询 -->  
 <!-- 对于相同的属性名称s.id和t.id以及s.name和t.name，一定要注意起别名，不然会冲突 -->  
<select id="selecthanderItem" parameterType="String" resultMap="handerItemResult">  
SELECT h.*,i.* 
FROM inputgoodhander h left join inputgooditem i on  
h.id=b.pid
WHERE a.id = #{id,jdbcType=VARCHAR}
</select>  
  <insert id="insert" parameterType="com.cn.swm.model.sale.InputGoodHander" >
    insert into inputgoodhander (id, code, supply, 
      shop, person, note, 
      amount, flag,ioflag,status)
    values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{supply,jdbcType=VARCHAR}, 
      #{shop,jdbcType=VARCHAR}, #{person,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{amount,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR},#{ioflag,jdbcType=VARCHAR},#{status,jdbcType=VARCHAR})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.cn.swm.model.sale.InputGoodHander"  >
    update inputgoodhander
    set status = #{status,jdbcType=VARCHAR}
    where code = #{code,jdbcType=VARCHAR}
  </update>
  <insert id="insertSelective" parameterType="com.cn.swm.model.sale.InputGoodHander" >
    insert into inputgoodhander
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="supply != null" >
        supply,
      </if>
      <if test="shop != null" >
        shop,
      </if>
      <if test="person != null" >
        person,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="flag != null" >
        flag,
      </if>
       <if test="ioflag != null" >
        ioflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="supply != null" >
        #{supply,jdbcType=VARCHAR},
      </if>
      <if test="shop != null" >
        #{shop,jdbcType=VARCHAR},
      </if>
      <if test="person != null" >
        #{person,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=VARCHAR},
      </if>
       <if test="ioflag != null" >
        #{ioflag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>